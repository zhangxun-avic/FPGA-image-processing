module vga_controller(
    input wire clk,          // 输入时钟（假设是25MHz）
    output wire hsync,       // 水平同步信号
    output wire vsync,       // 垂直同步信号
    output wire [10:0] x,     // 当前像素的X坐标
    output wire [10:0] y,     // 当前像素的Y坐标
    output wire valid        // 表示当前坐标是否在可显示范围内
);

// VGA timing constants
parameter H_DISP = 640;  // 水平显示区域
parameter H_FRONT = 16;  // 水平前沿
parameter H_SYNC = 96;   // 水平同步
parameter H_BACK = 48;   // 水平后沿
parameter H_TOTAL = H_DISP + H_FRONT + H_SYNC + H_BACK; // 水平总周期

parameter V_DISP = 480;  // 垂直显示区域
parameter V_FRONT = 10;  // 垂直前沿
parameter V_SYNC = 2;    // 垂直同步
parameter V_BACK = 33;   // 垂直后沿
parameter V_TOTAL = V_DISP + V_FRONT + V_SYNC + V_BACK; // 垂直总周期

// 水平和垂直计数器
reg [10:0] h_count = 0;
reg [10:0] v_count = 0;

// 生成水平同步和垂直同步信号
assign hsync = (h_count >= (H_DISP + H_FRONT) && h_count < (H_DISP + H_FRONT + H_SYNC));
assign vsync = (v_count >= (V_DISP + V_FRONT) && v_count < (V_DISP + V_FRONT + V_SYNC));

// 有效显示区域信号
assign valid = (h_count < H_DISP) && (v_count < V_DISP);

// 当前坐标输出
assign x = h_count;
assign y = v_count;

// 时钟边沿触发，更新计数器
always @(posedge clk) begin
    if (h_count == H_TOTAL - 1) begin
        h_count <= 0;
        if (v_count == V_TOTAL - 1)
            v_count <= 0;
        else
            v_count <= v_count + 1;
    end else
        h_count <= h_count + 1;
end

endmodule
